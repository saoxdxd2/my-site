import{defineComponent as e,unref as s,useSSRContext as o}from"file://C:/Users/sao/Documents/my-site/node_modules/vue/index.mjs";import{ssrRenderAttrs as r}from"file://C:/Users/sao/Documents/my-site/node_modules/vue/server-renderer/index.mjs";const n=e({__name:"ProseScript",__ssrInlineRender:!0,props:{src:{type:String,default:""}},setup:e=>(e,o,n,t)=>{s(!1)?o(`<div${r(t)}> Rendering the <code>script</code> element is dangerous and is disabled by default. Consider implementing your own <code>ProseScript</code> element to have control over script rendering. </div>`):o("\x3c!----\x3e")}}),t=n.setup;n.setup=(e,s)=>{const r=o();return(r.modules||(r.modules=new Set)).add("node_modules/@nuxtjs/mdc/dist/runtime/components/prose/ProseScript.vue"),t?t(e,s):void 0};export{n as default};
//# sourceMappingURL=ProseScript-CSlZMreI.mjs.map
