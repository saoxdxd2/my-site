{"version":3,"file":"ContentSlot-B--fnvoR.js","sources":["../../../../node_modules/@nuxtjs/mdc/dist/runtime/components/MDCSlot.vue","../../../../node_modules/@nuxt/content/dist/runtime/components/ContentSlot.vue"],"sourcesContent":["<script>\nimport { flatUnwrap } from \"../utils/node\";\nimport { defineComponent, getCurrentInstance, useSlots, computed, h } from \"#imports\";\nexport default defineComponent({\n  name: \"MDCSlot\",\n  functional: true,\n  props: {\n    name: {\n      type: String,\n      default: \"default\"\n    },\n    /**\n     * Tags to unwrap separated by spaces\n     * Example: 'ul li'\n     */\n    unwrap: {\n      type: [Boolean, String],\n      default: false\n    },\n    /**\n     * VNode to render\n     * This is only useful for render functions\n     */\n    use: {\n      type: Function,\n      default: void 0\n    }\n  },\n  setup(props) {\n    const { parent } = getCurrentInstance();\n    const { default: fallbackSlot } = useSlots();\n    const tags = computed(() => {\n      if (typeof props.unwrap === \"string\") {\n        return props.unwrap.split(\" \");\n      }\n      return [\"*\"];\n    });\n    return {\n      fallbackSlot,\n      tags,\n      parent\n    };\n  },\n  render({ use, unwrap, fallbackSlot, tags, parent }) {\n    try {\n      let slot = use;\n      if (typeof use === \"string\") {\n        slot = parent?.slots[use] || parent?.parent?.slots[use];\n        console.warn(`Please set :use=\"$slots.${use}\" in <MDCSlot> component to enable reactivity`);\n      }\n      if (!slot) {\n        return fallbackSlot ? fallbackSlot() : h(\"div\");\n      }\n      return unwrap ? flatUnwrap(slot(), tags) : [slot()];\n    } catch {\n      return h(\"div\");\n    }\n  }\n});\n</script>\n","<script>\nimport { defineComponent, h, resolveComponent } from \"vue\";\nexport default defineComponent({\n  props: {\n    /**\n     * A slot name or function\n     */\n    use: {\n      type: Function,\n      default: void 0\n    },\n    /**\n     * Tags to unwrap separated by spaces\n     * Example: 'ul li'\n     */\n    unwrap: {\n      type: [Boolean, String],\n      default: false\n    }\n  },\n  render(props) {\n    return h(resolveComponent(\"MDCSlot\"), props);\n  }\n});\n</script>\n"],"names":["_sfc_main","defineComponent","name","functional","props","type","String","default","unwrap","Boolean","use","Function","setup","parent","getCurrentInstance","fallbackSlot","useSlots","tags","computed","split","render","slot","slots","flatUnwrap","h","__nuxt_component_0"],"mappings":"2JAGA,MAAKA,EAAaC,EAAa,CAC7BC,KAAM,UACNC,YAAY,EACZC,MAAO,CACLF,KAAM,CACJG,KAAMC,OACNC,QAAS,WAMXC,OAAQ,CACNH,KAAM,CAACI,QAASH,QAChBC,SAAS,GAMXG,IAAK,CACHL,KAAMM,SACNJ,aAAS,IAGb,KAAAK,CAAMR,GACJ,MAAMS,OAAEA,GAAWC,KACXP,QAASQ,GAAiBC,IAOlC,MAAO,CACLD,eACAE,KARWC,EAAS,IACQ,iBAAjBd,EAAMI,OACRJ,EAAMI,OAAOW,MAAM,KAErB,CAAC,MAKRN,SAEJ,EACA,MAAAO,EAAOV,IAAEA,EAAAF,OAAKA,eAAQO,EAAAE,KAAcA,EAAAJ,OAAMA,IACxC,IACE,IAAIQ,EAAOX,EAKX,MAJmB,iBAARA,IACTW,EAAOR,GAAQS,MAAMZ,IAAQG,GAAQA,QAAQS,MAAMZ,IAGhDW,EAGEb,EAASe,EAAWF,IAAQJ,GAAQ,CAACI,KAFnCN,EAAeA,IAAiBS,EAAE,MAG7C,CAAA,MACE,OAAOA,EAAE,MACX,CACF,sKCvDG,MAAAxB,EAAaC,EAAa,CAC7BG,MAAO,CAILM,IAAK,CACHL,KAAMM,SACNJ,aAAS,GAMXC,OAAQ,CACNH,KAAM,CAACI,QAASH,QAChBC,SAAS,IAGba,OAAOhB,GACEoB,EAAEC,EAA6BrB","x_google_ignoreList":[0,1]}