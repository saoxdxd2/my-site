{"file":"ContentRendererMarkdown-CavIU9o6.js","mappings":"w4CAAA,MAAAA,EAAe,CACb,IACA,OACA,UACA,OACA,UACA,QACA,QACA,IACA,OACA,MACA,MACA,aACA,OACA,KACA,SACA,SACA,UACA,OACA,OACA,MACA,WACA,OACA,WACA,KACA,MACA,UACA,MACA,SACA,MACA,KACA,KACA,KACA,QACA,WACA,aACA,SACA,SACA,OACA,KACA,KACA,KACA,KACA,KACA,KACA,OACA,SACA,SACA,KACA,OACA,IACA,SACA,MACA,QACA,MACA,MACA,QACA,SACA,KACA,OACA,OACA,MACA,OACA,OACA,OACA,WACA,OACA,QACA,MACA,WACA,SACA,KACA,WACA,SACA,SACA,IACA,QACA,UACA,MACA,WACA,IACA,KACA,KACA,KACA,MACA,OACA,IACA,OACA,SACA,UACA,SACA,OACA,QACA,SACA,OACA,SACA,QACA,MACA,UACA,MACA,MACA,QACA,QACA,KACA,WACA,WACA,QACA,KACA,QACA,OACA,QACA,KACA,QACA,IACA,KACA,MACA,QACA,OC9GIC,EAAe,UACfC,EAAO,YACPC,EAAS,cACTC,EAAU,WACVC,EAAe,CAAC,SAAU,WAAY,SACtCC,EAAoBC,OAAOC,YAAY,CAAC,IAAK,IAAK,aAAc,OAAQ,MAAO,OAAQ,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MAAO,KAAM,KAAM,KAAM,SAAU,QAAS,QAAS,QAAS,KAAM,KAAM,KAAM,UAAUC,IAAKC,GAAM,CAACA,EAAG,SAASA,OAC1PC,EAAaC,EAAa,CAC7BC,KAAM,cACNC,MAAO,CAILC,KAAM,CACJC,KAAMT,OACNU,UAAU,GAKZC,KAAM,CACJF,KAAMT,OACNY,QAAS,MAAO,IAKlBC,MAAO,CACLJ,KAAM,CAACK,OAAQd,QACfY,aAAS,GAKXG,IAAK,CACHN,KAAM,CAACK,OAAQE,SACfJ,aAAS,GAKXK,MAAO,CACLR,KAAMO,QACNJ,aAAS,GAKXM,WAAY,CACVT,KAAMT,OACNY,QAAS,MAAO,IAMlBO,OAAQ,CACNV,KAAM,CAACO,QAASF,QAChBF,SAAS,IAGb,WAAMQ,C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","names":["htmlTags","DEFAULT_SLOT","rxOn","rxBind","rxModel","nativeInputs","proseComponentMap","Object","fromEntries","map","t","_sfc_main","defineComponent","name","props","body","type","required","data","default","class","String","tag","Boolean","prose","components","unwrap","setup","$nuxt","getCurrentInstance","appContext","app","route","$route","_route","mdc","$config","public","tags","toRaw","contentKey","computed","children","n","filter","includes","Array","from","Set","sort","join","runtimeData","reactive","watch","newData","assign","async","meta","loadComponents","node","documentMeta","renderTag","findMappedTag","components2","push","child","Promise","all","c","render","ssrRender","__ssrInlineRender","resolvedComponent","resolveVueComponent","__asyncLoader","__asyncResolved","resolveContentComponents","updateRuntimeData","code","value","lastIndex","split","length","reduce","o","k","i","ctx","component","h","this","$attrs","key","defaultSlotRenderer","flatUnwrap","renderSlots","renderNode","h2","parentScope","Text","Comment","originalTag","$document","$doc","splitter","keys","trim","data2","defaultValue","renderBinding","test","native","propName","match","event","evalInContext","e","target","propsToDataRxModel","_key","val","propsToDataVBind","replace","on","propsToDataRxOn","propsToDataRxBind","attribute","find","html","isArray","every","v","propsToData","parentProps","slotNodes","node2","isTemplate","slotName","startsWith","getSlotName","slots","entries","slots2","children2","nodes","mergedNodes","previousNode","mergeTextNodes","_component","resolveComponent","pascalCase","defineAsyncComponent","resolve","context","result","destr","__ignoreMap","kebabCase","__props","debug","useContentPreview","isEnabled","excerpt","mdcComponents","_components","_unref","_id"],"sources":["../../../../node_modules/@nuxtjs/mdc/dist/runtime/parser/utils/html-tags-list.js","../../../../node_modules/@nuxtjs/mdc/dist/runtime/components/MDCRenderer.vue","../../../../node_modules/@nuxt/content/dist/runtime/components/ContentRendererMarkdown.vue"],"sourcesContent":["export default [\n  \"a\",\n  \"abbr\",\n  \"address\",\n  \"area\",\n  \"article\",\n  \"aside\",\n  \"audio\",\n  \"b\",\n  \"base\",\n  \"bdi\",\n  \"bdo\",\n  \"blockquote\",\n  \"body\",\n  \"br\",\n  \"button\",\n  \"canvas\",\n  \"caption\",\n  \"cite\",\n  \"code\",\n  \"col\",\n  \"colgroup\",\n  \"data\",\n  \"datalist\",\n  \"dd\",\n  \"del\",\n  \"details\",\n  \"dfn\",\n  \"dialog\",\n  \"div\",\n  \"dl\",\n  \"dt\",\n  \"em\",\n  \"embed\",\n  \"fieldset\",\n  \"figcaption\",\n  \"figure\",\n  \"footer\",\n  \"form\",\n  \"h1\",\n  \"h2\",\n  \"h3\",\n  \"h4\",\n  \"h5\",\n  \"h6\",\n  \"head\",\n  \"header\",\n  \"hgroup\",\n  \"hr\",\n  \"html\",\n  \"i\",\n  \"iframe\",\n  \"img\",\n  \"input\",\n  \"ins\",\n  \"kbd\",\n  \"label\",\n  \"legend\",\n  \"li\",\n  \"link\",\n  \"main\",\n  \"map\",\n  \"mark\",\n  \"math\",\n  \"menu\",\n  \"menuitem\",\n  \"meta\",\n  \"meter\",\n  \"nav\",\n  \"noscript\",\n  \"object\",\n  \"ol\",\n  \"optgroup\",\n  \"option\",\n  \"output\",\n  \"p\",\n  \"param\",\n  \"picture\",\n  \"pre\",\n  \"progress\",\n  \"q\",\n  \"rb\",\n  \"rp\",\n  \"rt\",\n  \"rtc\",\n  \"ruby\",\n  \"s\",\n  \"samp\",\n  \"script\",\n  \"section\",\n  \"select\",\n  \"slot\",\n  \"small\",\n  \"source\",\n  \"span\",\n  \"strong\",\n  \"style\",\n  \"sub\",\n  \"summary\",\n  \"sup\",\n  \"svg\",\n  \"table\",\n  \"tbody\",\n  \"td\",\n  \"template\",\n  \"textarea\",\n  \"tfoot\",\n  \"th\",\n  \"thead\",\n  \"time\",\n  \"title\",\n  \"tr\",\n  \"track\",\n  \"u\",\n  \"ul\",\n  \"var\",\n  \"video\",\n  \"wbr\"\n];\n","<script>\nimport { h, resolveComponent, reactive, watch, Text, Comment, defineAsyncComponent, defineComponent, toRaw, computed, getCurrentInstance } from \"vue\";\nimport destr from \"destr\";\nimport { kebabCase, pascalCase } from \"scule\";\nimport { find, html } from \"property-information\";\nimport htmlTags from \"../parser/utils/html-tags-list\";\nimport { flatUnwrap } from \"../utils/node\";\nconst DEFAULT_SLOT = \"default\";\nconst rxOn = /^@|^v-on:/;\nconst rxBind = /^:|^v-bind:/;\nconst rxModel = /^v-model/;\nconst nativeInputs = [\"select\", \"textarea\", \"input\"];\nconst proseComponentMap = Object.fromEntries([\"p\", \"a\", \"blockquote\", \"code\", \"pre\", \"code\", \"em\", \"h1\", \"h2\", \"h3\", \"h4\", \"h5\", \"h6\", \"hr\", \"img\", \"ul\", \"ol\", \"li\", \"strong\", \"table\", \"thead\", \"tbody\", \"td\", \"th\", \"tr\", \"script\"].map((t) => [t, `prose-${t}`]));\nexport default defineComponent({\n  name: \"MDCRenderer\",\n  props: {\n    /**\n     * Content to render\n     */\n    body: {\n      type: Object,\n      required: true\n    },\n    /**\n     * Document meta data\n     */\n    data: {\n      type: Object,\n      default: () => ({})\n    },\n    /**\n     * Class(es) to bind to the component\n     */\n    class: {\n      type: [String, Object],\n      default: void 0\n    },\n    /**\n     * Root tag to use for rendering\n     */\n    tag: {\n      type: [String, Boolean],\n      default: void 0\n    },\n    /**\n     * Whether or not to render Prose components instead of HTML tags\n     */\n    prose: {\n      type: Boolean,\n      default: void 0\n    },\n    /**\n     * The map of custom components to use for rendering.\n     */\n    components: {\n      type: Object,\n      default: () => ({})\n    },\n    /**\n     * Tags to unwrap separated by spaces\n     * Example: 'ul li'\n     */\n    unwrap: {\n      type: [Boolean, String],\n      default: false\n    }\n  },\n  async setup(props) {\n    const $nuxt = getCurrentInstance()?.appContext?.app?.$nuxt;\n    const route = $nuxt?.$route || $nuxt?._route;\n    const { mdc } = $nuxt?.$config?.public || {};\n    const tags = {\n      ...mdc?.components?.prose && props.prose !== false ? proseComponentMap : {},\n      ...mdc?.components?.map || {},\n      ...toRaw(props.data?.mdc?.components || {}),\n      ...props.components\n    };\n    const contentKey = computed(() => {\n      const components = (props.body?.children || []).map((n) => n.tag || n.type).filter((t) => !htmlTags.includes(t));\n      return Array.from(new Set(components)).sort().join(\".\");\n    });\n    const runtimeData = reactive({\n      ...props.data\n    });\n    watch(() => props.data, (newData) => {\n      Object.assign(runtimeData, newData);\n    });\n    await resolveContentComponents(props.body, { tags });\n    function updateRuntimeData(code, value) {\n      const lastIndex = code.split(\".\").length - 1;\n      return code.split(\".\").reduce((o, k, i) => {\n        if (i == lastIndex && o) {\n          o[k] = value;\n          return o[k];\n        }\n        return typeof o === \"object\" ? o[k] : void 0;\n      }, runtimeData);\n    }\n    return { tags, contentKey, route, runtimeData, updateRuntimeData };\n  },\n  render(ctx) {\n    const { tags, tag, body, data, contentKey, route, unwrap, runtimeData, updateRuntimeData } = ctx;\n    if (!body) {\n      return null;\n    }\n    const meta = { ...data, tags, $route: route, runtimeData, updateRuntimeData };\n    const component = tag !== false ? resolveVueComponent(tag || meta.component?.name || meta.component || \"div\") : void 0;\n    return component ? h(component, { ...meta.component?.props, class: ctx.class, ...this.$attrs, key: contentKey }, { default: defaultSlotRenderer }) : defaultSlotRenderer?.();\n    function defaultSlotRenderer() {\n      if (unwrap) {\n        return flatUnwrap(\n          renderSlots(body, h, meta, meta).default(),\n          typeof unwrap === \"string\" ? unwrap.split(\" \") : [\"*\"]\n        );\n      }\n      return renderSlots(body, h, meta, meta).default();\n    }\n  }\n});\nfunction renderNode(node, h2, documentMeta, parentScope = {}) {\n  if (node.type === \"text\") {\n    return h2(Text, node.value);\n  }\n  if (node.type === \"comment\") {\n    return h2(Comment, null, node.value);\n  }\n  const originalTag = node.tag;\n  const renderTag = findMappedTag(node, documentMeta.tags);\n  if (node.tag === \"binding\") {\n    return renderBinding(node, h2, documentMeta, parentScope);\n  }\n  const component = resolveVueComponent(renderTag);\n  if (typeof component === \"object\") {\n    component.tag = originalTag;\n  }\n  const props = propsToData(node, documentMeta);\n  return h2(\n    component,\n    props,\n    renderSlots(node, h2, documentMeta, { ...parentScope, ...props })\n  );\n}\nfunction renderBinding(node, h2, documentMeta, parentScope = {}) {\n  const data = {\n    ...documentMeta.runtimeData,\n    ...parentScope,\n    $document: documentMeta,\n    $doc: documentMeta\n  };\n  const splitter = /\\.|\\[(\\d+)\\]/;\n  const keys = node.props?.value.trim().split(splitter).filter(Boolean);\n  const value = keys.reduce((data2, key) => {\n    if (data2 && key in data2) {\n      if (typeof data2[key] === \"function\") {\n        return data2[key]();\n      } else {\n        return data2[key];\n      }\n    }\n    return void 0;\n  }, data);\n  const defaultValue = node.props?.defaultValue;\n  return h2(Text, value ?? defaultValue ?? \"\");\n}\nfunction renderSlots(node, h2, documentMeta, parentProps) {\n  const children = node.children || [];\n  const slotNodes = children.reduce((data, node2) => {\n    if (!isTemplate(node2)) {\n      data[DEFAULT_SLOT].push(node2);\n      return data;\n    }\n    const slotName = getSlotName(node2);\n    data[slotName] = data[slotName] || [];\n    if (node2.type === \"element\") {\n      data[slotName].push(...node2.children || []);\n    }\n    return data;\n  }, {\n    [DEFAULT_SLOT]: []\n  });\n  const slots = Object.entries(slotNodes).reduce((slots2, [name, children2]) => {\n    if (!children2.length) {\n      return slots2;\n    }\n    slots2[name] = () => {\n      const vNodes = children2.map((child) => renderNode(child, h2, documentMeta, parentProps));\n      return mergeTextNodes(vNodes);\n    };\n    return slots2;\n  }, {});\n  return slots;\n}\nfunction propsToData(node, documentMeta) {\n  const { tag = \"\", props = {} } = node;\n  return Object.keys(props).reduce(function(data, key) {\n    if (key === \"__ignoreMap\") {\n      return data;\n    }\n    const value = props[key];\n    if (rxModel.test(key)) {\n      return propsToDataRxModel(key, value, data, documentMeta, { native: nativeInputs.includes(tag) });\n    }\n    if (key === \"v-bind\") {\n      return propsToDataVBind(key, value, data, documentMeta);\n    }\n    if (rxOn.test(key)) {\n      return propsToDataRxOn(key, value, data, documentMeta);\n    }\n    if (rxBind.test(key)) {\n      return propsToDataRxBind(key, value, data, documentMeta);\n    }\n    const { attribute } = find(html, key);\n    if (Array.isArray(value) && value.every((v) => typeof v === \"string\")) {\n      data[attribute] = value.join(\" \");\n      return data;\n    }\n    data[attribute] = value;\n    return data;\n  }, {});\n}\nfunction propsToDataRxModel(key, value, data, documentMeta, { native }) {\n  const propName = key.match(/^v-model:([^=]+)/)?.[1] || \"modelValue\";\n  const field = native ? \"value\" : propName;\n  const event = native ? \"onInput\" : `onUpdate:${propName}`;\n  data[field] = evalInContext(value, documentMeta.runtimeData);\n  data[event] = (e) => {\n    documentMeta.updateRuntimeData(value, native ? e.target?.value : e);\n  };\n  return data;\n}\nfunction propsToDataVBind(_key, value, data, documentMeta) {\n  const val = evalInContext(value, documentMeta);\n  data = Object.assign(data, val);\n  return data;\n}\nfunction propsToDataRxOn(key, value, data, documentMeta) {\n  key = key.replace(rxOn, \"\");\n  data.on = data.on || {};\n  data.on[key] = () => evalInContext(value, documentMeta);\n  return data;\n}\nfunction propsToDataRxBind(key, value, data, documentMeta) {\n  key = key.replace(rxBind, \"\");\n  data[key] = evalInContext(value, documentMeta);\n  return data;\n}\nconst resolveVueComponent = (component) => {\n  if (typeof component === \"string\") {\n    if (htmlTags.includes(component)) {\n      return component;\n    }\n    const _component = resolveComponent(pascalCase(component), false);\n    if (!component || _component?.name === \"AsyncComponentWrapper\") {\n      return _component;\n    }\n    if (typeof _component === \"string\") {\n      return _component;\n    }\n    if (\"setup\" in _component) {\n      return defineAsyncComponent(() => new Promise((resolve) => resolve(_component)));\n    }\n    return _component;\n  }\n  return component;\n};\nfunction evalInContext(code, context) {\n  const result = code.split(\".\").reduce((o, k) => typeof o === \"object\" ? o[k] : void 0, context);\n  return typeof result === \"undefined\" ? destr(code) : result;\n}\nfunction getSlotName(node) {\n  let name = \"\";\n  for (const propName of Object.keys(node.props || {})) {\n    if (!propName.startsWith(\"#\") && !propName.startsWith(\"v-slot:\")) {\n      continue;\n    }\n    name = propName.split(/[:#]/, 2)[1];\n    break;\n  }\n  return name || DEFAULT_SLOT;\n}\nfunction isTemplate(node) {\n  return node.tag === \"template\";\n}\nfunction mergeTextNodes(nodes) {\n  const mergedNodes = [];\n  for (const node of nodes) {\n    const previousNode = mergedNodes[mergedNodes.length - 1];\n    if (node.type === Text && previousNode?.type === Text) {\n      previousNode.children = previousNode.children + node.children;\n    } else {\n      mergedNodes.push(node);\n    }\n  }\n  return mergedNodes;\n}\nasync function resolveContentComponents(body, meta) {\n  if (!body) {\n    return;\n  }\n  const components = Array.from(new Set(loadComponents(body, meta)));\n  await Promise.all(components.map(async (c) => {\n    if (c?.render || c?.ssrRender || c?.__ssrInlineRender) {\n      return;\n    }\n    const resolvedComponent = resolveVueComponent(c);\n    if (resolvedComponent?.__asyncLoader && !resolvedComponent.__asyncResolved) {\n      await resolvedComponent.__asyncLoader();\n    }\n  }));\n  function loadComponents(node, documentMeta) {\n    const tag = node.tag;\n    if (node.type === \"text\" || tag === \"binding\" || node.type === \"comment\") {\n      return [];\n    }\n    const renderTag = findMappedTag(node, documentMeta.tags);\n    const components2 = [];\n    if (node.type !== \"root\" && !htmlTags.includes(renderTag)) {\n      components2.push(renderTag);\n    }\n    for (const child of node.children || []) {\n      components2.push(...loadComponents(child, documentMeta));\n    }\n    return components2;\n  }\n}\nfunction findMappedTag(node, tags) {\n  const tag = node.tag;\n  if (!tag || typeof node.props?.__ignoreMap !== \"undefined\") {\n    return tag;\n  }\n  return tags[tag] || tags[pascalCase(tag)] || tags[kebabCase(node.tag)] || tag;\n}\n</script>\n","<template>\n  <MDCRenderer\n    :body=\"body\"\n    :data=\"data\"\n    :tag=\"tag\"\n    :components=\"mdcComponents\"\n    :data-content-id=\"debug ? value._id : undefined\"\n  />\n</template>\n\n<script setup lang=\"ts\">\nimport { computed } from 'vue'\nimport { useContentPreview } from '../composables/preview'\n\nconst props = defineProps({\n  /**\n   * Content to render\n   */\n  value: {\n    type: Object,\n    required: true\n  },\n  /**\n   * Render only the excerpt\n   */\n  excerpt: {\n    type: Boolean,\n    default: false\n  },\n  /**\n   * Root tag to use for rendering\n   */\n  tag: {\n    type: String,\n    default: 'div'\n  },\n  /**\n   * The map of custom components to use for rendering.\n   */\n  components: {\n    type: Object,\n    default: () => ({})\n  },\n\n  data: {\n    type: Object,\n    default: () => ({})\n  }\n})\n\nconst debug = import.meta.dev || useContentPreview().isEnabled()\n\nconst body = computed(() => {\n  let body = props.value.body || props.value\n  if (props.excerpt && props.value.excerpt) {\n    body = props.value.excerpt\n  }\n\n  return body\n})\n\nconst data = computed(() => {\n   \n  const { body, excerpt, ...data } = props.value\n  return {\n    ...data,\n    ...props.data\n  }\n})\n\nconst mdcComponents = computed(() => {\n  return {\n    ...props.components,\n    ...(data.value._components || {})\n  }\n})\n</script>\n"],"version":3}