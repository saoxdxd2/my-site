{"file":"nuxt-link-4BWNsQEZ.js","mappings":"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","names":["defineNuxtLink","options","componentName","isHashLinkWithoutHashMode","link","startsWith","useNuxtLink","props","router","useRouter","config","useRuntimeConfig","hasTarget","computed","target","isAbsoluteUrl","path","to","href","hasProtocol","acceptRelative","builtinRouterLink","resolveComponent","useBuiltinLink","useLink","isExternal","external","value","resolve","trailingSlash","effectiveTrailingSlash","applyTrailingSlashBehavior","name","resolveTrailingSlashBehavior","resolveRouteObject","joinURL","app","baseURL","isActive","currentRoute","isExactActive","route","navigate","_e","navigateTo","replace","defineComponent","type","String","Object","default","required","rel","noRel","Boolean","prefetch","prefetchOn","noPrefetch","activeClass","exactActiveClass","prefetchedClass","ariaCurrentValue","custom","setup","slots","shallowRef","async","nuxtApp","useNuxtApp","routerLinkProps","ref","h","args","find","arg","firstNonUndefined","externalRelAttribute","url","URL","pathname","fullPath","query","parseQuery","search","hash","params","matched","redirectedFrom","meta","onClick","event","preventDefault","push","__nuxt_component_0","nuxtLinkDefaults","normalizeFn","withTrailingSlash","withoutTrailingSlash"],"sources":["../../../../node_modules/nuxt/dist/app/components/nuxt-link.js"],"sourcesContent":["import { computed, defineComponent, h, inject, onBeforeUnmount, onMounted, provide, ref, resolveComponent, shallowRef } from \"vue\";\nimport { hasProtocol, joinURL, parseQuery, withTrailingSlash, withoutTrailingSlash } from \"ufo\";\nimport { preloadRouteComponents } from \"../composables/preload.js\";\nimport { onNuxtReady } from \"../composables/ready.js\";\nimport { navigateTo, resolveRouteObject, useRouter } from \"../composables/router.js\";\nimport { useNuxtApp, useRuntimeConfig } from \"../nuxt.js\";\nimport { cancelIdleCallback, requestIdleCallback } from \"../compat/idle-callback.js\";\nimport { nuxtLinkDefaults } from \"#build/nuxt.config.mjs\";\nimport { hashMode } from \"#build/router.options\";\nconst firstNonUndefined = (...args) => args.find((arg) => arg !== void 0);\nconst NuxtLinkDevKeySymbol = Symbol(\"nuxt-link-dev-key\");\n// @__NO_SIDE_EFFECTS__\nexport function defineNuxtLink(options) {\n  const componentName = options.componentName || \"NuxtLink\";\n  function checkPropConflicts(props, main, sub) {\n    if (import.meta.dev && props[main] !== void 0 && props[sub] !== void 0) {\n      console.warn(`[${componentName}] \\`${main}\\` and \\`${sub}\\` cannot be used together. \\`${sub}\\` will be ignored.`);\n    }\n  }\n  function isHashLinkWithoutHashMode(link) {\n    return !hashMode && typeof link === \"string\" && link.startsWith(\"#\");\n  }\n  function resolveTrailingSlashBehavior(to, resolve, trailingSlash) {\n    const effectiveTrailingSlash = trailingSlash ?? options.trailingSlash;\n    if (!to || effectiveTrailingSlash !== \"append\" && effectiveTrailingSlash !== \"remove\") {\n      return to;\n    }\n    if (typeof to === \"string\") {\n      return applyTrailingSlashBehavior(to, effectiveTrailingSlash);\n    }\n    const path = \"path\" in to && to.path !== void 0 ? to.path : resolve(to).path;\n    const resolvedPath = {\n      ...to,\n      name: void 0,\n      // named routes would otherwise always override trailing slash behavior\n      path: applyTrailingSlashBehavior(path, effectiveTrailingSlash)\n    };\n    return resolvedPath;\n  }\n  function useNuxtLink(props) {\n    const router = useRouter();\n    const config = useRuntimeConfig();\n    const hasTarget = computed(() => !!props.target && props.target !== \"_self\");\n    const isAbsoluteUrl = computed(() => {\n      const path = props.to || props.href || \"\";\n      return typeof path === \"string\" && hasProtocol(path, { acceptRelative: true });\n    });\n    const builtinRouterLink = resolveComponent(\"RouterLink\");\n    const useBuiltinLink = builtinRouterLink && typeof builtinRouterLink !== \"string\" ? builtinRouterLink.useLink : void 0;\n    const isExternal = computed(() => {\n      if (props.external) {\n        return true;\n      }\n      const path = props.to || props.href || \"\";\n      if (typeof path === \"object\") {\n        return false;\n      }\n      return path === \"\" || isAbsoluteUrl.value;\n    });\n    const to = computed(() => {\n      checkPropConflicts(props, \"to\", \"href\");\n      const path = props.to || props.href || \"\";\n      if (isExternal.value) {\n        return path;\n      }\n      return resolveTrailingSlashBehavior(path, router.resolve, props.trailingSlash);\n    });\n    const link = isExternal.value ? void 0 : useBuiltinLink?.({ ...props, to });\n    const href = computed(() => {\n      const effectiveTrailingSlash = props.trailingSlash ?? options.trailingSlash;\n      if (!to.value || isAbsoluteUrl.value || isHashLinkWithoutHashMode(to.value)) {\n        return to.value;\n      }\n      if (isExternal.value) {\n        const path = typeof to.value === \"object\" && \"path\" in to.value ? resolveRouteObject(to.value) : to.value;\n        const href2 = typeof path === \"object\" ? router.resolve(path).href : path;\n        return applyTrailingSlashBehavior(href2, effectiveTrailingSlash);\n      }\n      if (typeof to.value === \"object\") {\n        return router.resolve(to.value)?.href ?? null;\n      }\n      return applyTrailingSlashBehavior(joinURL(config.app.baseURL, to.value), effectiveTrailingSlash);\n    });\n    return {\n      to,\n      hasTarget,\n      isAbsoluteUrl,\n      isExternal,\n      //\n      href,\n      isActive: link?.isActive ?? computed(() => to.value === router.currentRoute.value.path),\n      isExactActive: link?.isExactActive ?? computed(() => to.value === router.currentRoute.value.path),\n      route: link?.route ?? computed(() => router.resolve(to.value)),\n      async navigate(_e) {\n        await navigateTo(href.value, { replace: props.replace, external: isExternal.value || hasTarget.value });\n      }\n    };\n  }\n  return defineComponent({\n    name: componentName,\n    props: {\n      // Routing\n      to: {\n        type: [String, Object],\n        default: void 0,\n        required: false\n      },\n      href: {\n        type: [String, Object],\n        default: void 0,\n        required: false\n      },\n      // Attributes\n      target: {\n        type: String,\n        default: void 0,\n        required: false\n      },\n      rel: {\n        type: String,\n        default: void 0,\n        required: false\n      },\n      noRel: {\n        type: Boolean,\n        default: void 0,\n        required: false\n      },\n      // Prefetching\n      prefetch: {\n        type: Boolean,\n        default: void 0,\n        required: false\n      },\n      prefetchOn: {\n        type: [String, Object],\n        default: void 0,\n        required: false\n      },\n      noPrefetch: {\n        type: Boolean,\n        default: void 0,\n        required: false\n      },\n      // Styling\n      activeClass: {\n        type: String,\n        default: void 0,\n        required: false\n      },\n      exactActiveClass: {\n        type: String,\n        default: void 0,\n        required: false\n      },\n      prefetchedClass: {\n        type: String,\n        default: void 0,\n        required: false\n      },\n      // Vue Router's `<RouterLink>` additional props\n      replace: {\n        type: Boolean,\n        default: void 0,\n        required: false\n      },\n      ariaCurrentValue: {\n        type: String,\n        default: void 0,\n        required: false\n      },\n      // Edge cases handling\n      external: {\n        type: Boolean,\n        default: void 0,\n        required: false\n      },\n      // Slot API\n      custom: {\n        type: Boolean,\n        default: void 0,\n        required: false\n      },\n      // Behavior\n      trailingSlash: {\n        type: String,\n        default: void 0,\n        required: false\n      }\n    },\n    useLink: useNuxtLink,\n    setup(props, { slots }) {\n      const router = useRouter();\n      const { to, href, navigate, isExternal, hasTarget, isAbsoluteUrl } = useNuxtLink(props);\n      const prefetched = shallowRef(false);\n      const el = import.meta.server ? void 0 : ref(null);\n      const elRef = import.meta.server ? void 0 : (ref2) => {\n        el.value = props.custom ? ref2?.$el?.nextElementSibling : ref2?.$el;\n      };\n      function shouldPrefetch(mode) {\n        if (import.meta.server) {\n          return;\n        }\n        return !prefetched.value && (typeof props.prefetchOn === \"string\" ? props.prefetchOn === mode : props.prefetchOn?.[mode] ?? options.prefetchOn?.[mode]) && (props.prefetch ?? options.prefetch) !== false && props.noPrefetch !== true && props.target !== \"_blank\" && !isSlowConnection();\n      }\n      async function prefetch(nuxtApp = useNuxtApp()) {\n        if (import.meta.server) {\n          return;\n        }\n        if (prefetched.value) {\n          return;\n        }\n        prefetched.value = true;\n        const path = typeof to.value === \"string\" ? to.value : isExternal.value ? resolveRouteObject(to.value) : router.resolve(to.value).fullPath;\n        const normalizedPath = isExternal.value ? new URL(path, window.location.href).href : path;\n        await Promise.all([\n          nuxtApp.hooks.callHook(\"link:prefetch\", normalizedPath).catch(() => {\n          }),\n          !isExternal.value && !hasTarget.value && preloadRouteComponents(to.value, router).catch(() => {\n          })\n        ]);\n      }\n      if (import.meta.client) {\n        checkPropConflicts(props, \"prefetch\", \"noPrefetch\");\n        if (shouldPrefetch(\"visibility\")) {\n          const nuxtApp = useNuxtApp();\n          let idleId;\n          let unobserve = null;\n          onMounted(() => {\n            const observer = useObserver();\n            onNuxtReady(() => {\n              idleId = requestIdleCallback(() => {\n                if (el?.value?.tagName) {\n                  unobserve = observer.observe(el.value, async () => {\n                    unobserve?.();\n                    unobserve = null;\n                    await prefetch(nuxtApp);\n                  });\n                }\n              });\n            });\n          });\n          onBeforeUnmount(() => {\n            if (idleId) {\n              cancelIdleCallback(idleId);\n            }\n            unobserve?.();\n            unobserve = null;\n          });\n        }\n      }\n      if (import.meta.dev && import.meta.server && !props.custom) {\n        const isNuxtLinkChild = inject(NuxtLinkDevKeySymbol, false);\n        if (isNuxtLinkChild) {\n          console.log(\"[nuxt] [NuxtLink] You can't nest one <a> inside another <a>. This will cause a hydration error on client-side. You can pass the `custom` prop to take full control of the markup.\");\n        } else {\n          provide(NuxtLinkDevKeySymbol, true);\n        }\n      }\n      return () => {\n        if (!isExternal.value && !hasTarget.value && !isHashLinkWithoutHashMode(to.value)) {\n          const routerLinkProps = {\n            ref: elRef,\n            to: to.value,\n            activeClass: props.activeClass || options.activeClass,\n            exactActiveClass: props.exactActiveClass || options.exactActiveClass,\n            replace: props.replace,\n            ariaCurrentValue: props.ariaCurrentValue,\n            custom: props.custom\n          };\n          if (!props.custom) {\n            if (import.meta.client) {\n              if (shouldPrefetch(\"interaction\")) {\n                routerLinkProps.onPointerenter = prefetch.bind(null, void 0);\n                routerLinkProps.onFocus = prefetch.bind(null, void 0);\n              }\n              if (prefetched.value) {\n                routerLinkProps.class = props.prefetchedClass || options.prefetchedClass;\n              }\n            }\n            routerLinkProps.rel = props.rel || void 0;\n          }\n          return h(\n            resolveComponent(\"RouterLink\"),\n            routerLinkProps,\n            slots.default\n          );\n        }\n        const target = props.target || null;\n        checkPropConflicts(props, \"noRel\", \"rel\");\n        const rel = firstNonUndefined(\n          // converts `\"\"` to `null` to prevent the attribute from being added as empty (`rel=\"\"`)\n          props.noRel ? \"\" : props.rel,\n          options.externalRelAttribute,\n          /*\n          * A fallback rel of `noopener noreferrer` is applied for external links or links that open in a new tab.\n          * This solves a reverse tabnapping security flaw in browsers pre-2021 as well as improving privacy.\n          */\n          isAbsoluteUrl.value || hasTarget.value ? \"noopener noreferrer\" : \"\"\n        ) || null;\n        if (props.custom) {\n          if (!slots.default) {\n            return null;\n          }\n          return slots.default({\n            href: href.value,\n            navigate,\n            prefetch,\n            get route() {\n              if (!href.value) {\n                return void 0;\n              }\n              const url = new URL(href.value, import.meta.client ? window.location.href : \"http://localhost\");\n              return {\n                path: url.pathname,\n                fullPath: url.pathname,\n                get query() {\n                  return parseQuery(url.search);\n                },\n                hash: url.hash,\n                params: {},\n                name: void 0,\n                matched: [],\n                redirectedFrom: void 0,\n                meta: {},\n                href: href.value\n              };\n            },\n            rel,\n            target,\n            isExternal: isExternal.value || hasTarget.value,\n            isActive: false,\n            isExactActive: false\n          });\n        }\n        return h(\"a\", {\n          ref: el,\n          href: href.value || null,\n          // converts `\"\"` to `null` to prevent the attribute from being added as empty (`href=\"\"`)\n          rel,\n          target,\n          onClick: (event) => {\n            if (isExternal.value || hasTarget.value) {\n              return;\n            }\n            event.preventDefault();\n            return props.replace ? router.replace(href.value) : router.push(href.value);\n          }\n        }, slots.default?.());\n      };\n    }\n    // }) as unknown as DefineComponent<NuxtLinkProps, object, object, ComputedOptions, MethodOptions, object, object, EmitsOptions, string, object, NuxtLinkProps, object, SlotsType<NuxtLinkSlots>>\n  });\n}\nexport default /* @__PURE__ */ defineNuxtLink(nuxtLinkDefaults);\nfunction applyTrailingSlashBehavior(to, trailingSlash) {\n  const normalizeFn = trailingSlash === \"append\" ? withTrailingSlash : withoutTrailingSlash;\n  const hasProtocolDifferentFromHttp = hasProtocol(to) && !to.startsWith(\"http\");\n  if (hasProtocolDifferentFromHttp) {\n    return to;\n  }\n  return normalizeFn(to, true);\n}\nfunction useObserver() {\n  if (import.meta.server) {\n    return;\n  }\n  const nuxtApp = useNuxtApp();\n  if (nuxtApp._observer) {\n    return nuxtApp._observer;\n  }\n  let observer = null;\n  const callbacks = /* @__PURE__ */ new Map();\n  const observe = (element, callback) => {\n    observer ||= new IntersectionObserver((entries) => {\n      for (const entry of entries) {\n        const callback2 = callbacks.get(entry.target);\n        const isVisible = entry.isIntersecting || entry.intersectionRatio > 0;\n        if (isVisible && callback2) {\n          callback2();\n        }\n      }\n    });\n    callbacks.set(element, callback);\n    observer.observe(element);\n    return () => {\n      callbacks.delete(element);\n      observer?.unobserve(element);\n      if (callbacks.size === 0) {\n        observer?.disconnect();\n        observer = null;\n      }\n    };\n  };\n  const _observer = nuxtApp._observer = {\n    observe\n  };\n  return _observer;\n}\nconst IS_2G_RE = /2g/;\nfunction isSlowConnection() {\n  if (import.meta.server) {\n    return;\n  }\n  const cn = navigator.connection;\n  if (cn && (cn.saveData || IS_2G_RE.test(cn.effectiveType))) {\n    return true;\n  }\n  return false;\n}\n"],"version":3}