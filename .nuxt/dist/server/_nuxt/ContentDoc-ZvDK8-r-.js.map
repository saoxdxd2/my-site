{"version":3,"file":"ContentDoc-ZvDK8-r-.js","sources":["../../../../node_modules/@nuxt/content/dist/runtime/composables/head.js","../../../../node_modules/@nuxt/content/dist/runtime/components/ContentDoc.vue"],"sourcesContent":["import { hasProtocol, joinURL, withTrailingSlash, withoutTrailingSlash } from \"ufo\";\nimport { useRoute, nextTick, useHead, unref, watch, useRuntimeConfig } from \"#imports\";\nexport const useContentHead = (_content, to = useRoute()) => {\n  const content = unref(_content);\n  const config = useRuntimeConfig();\n  const refreshHead = (data = content) => {\n    if (!to.path || !data) {\n      return;\n    }\n    const head = Object.assign({}, data?.head || {});\n    head.meta = [...head.meta || []];\n    head.link = [...head.link || []];\n    const title = head.title || data?.title;\n    if (title) {\n      head.title = title;\n      if (import.meta.server && !head.meta.some((m) => m.property === \"og:title\")) {\n        head.meta.push({\n          property: \"og:title\",\n          content: title\n        });\n      }\n    }\n    const host = config.public.content.host;\n    if (import.meta.server && host) {\n      const _url = joinURL(host ?? \"/\", config.app.baseURL, to.fullPath);\n      const url = config.public.content.trailingSlash ? withTrailingSlash(_url) : withoutTrailingSlash(_url);\n      if (!head.meta.some((m) => m.property === \"og:url\")) {\n        head.meta.push({\n          property: \"og:url\",\n          content: url\n        });\n      }\n      if (!head.link.some((m) => m.rel === \"canonical\")) {\n        head.link.push({\n          rel: \"canonical\",\n          href: url\n        });\n      }\n    }\n    const description = head?.description || data?.description;\n    if (description && head.meta.filter((m) => m.name === \"description\").length === 0) {\n      head.meta.push({\n        name: \"description\",\n        content: description\n      });\n    }\n    if (import.meta.server && description && !head.meta.some((m) => m.property === \"og:description\")) {\n      head.meta.push({\n        property: \"og:description\",\n        content: description\n      });\n    }\n    const image = head?.image || data?.image;\n    if (import.meta.server && image && head.meta.filter((m) => m.property === \"og:image\").length === 0) {\n      if (typeof image === \"string\") {\n        head.meta.push({\n          property: \"og:image\",\n          content: host && !hasProtocol(image) ? new URL(joinURL(config.app.baseURL, image), host).href : image\n        });\n      }\n      if (typeof image === \"object\") {\n        const imageKeys = [\n          \"src\",\n          \"secure_url\",\n          \"type\",\n          \"width\",\n          \"height\",\n          \"alt\"\n        ];\n        for (const key of imageKeys) {\n          if (key === \"src\" && image.src) {\n            const isAbsoluteURL = hasProtocol(image.src);\n            const imageURL = isAbsoluteURL ? image.src : joinURL(config.app.baseURL, image.src ?? \"/\");\n            head.meta.push({\n              property: \"og:image\",\n              content: host && !isAbsoluteURL ? new URL(imageURL, host).href : imageURL\n            });\n          } else if (image[key]) {\n            head.meta.push({\n              property: `og:image:${key}`,\n              content: image[key]\n            });\n          }\n        }\n      }\n    }\n    if (import.meta.client) {\n      nextTick(() => useHead(head));\n    } else {\n      useHead(head);\n    }\n  };\n  watch(() => unref(_content), refreshHead, { immediate: true });\n};\n","<script>\nimport { defineComponent, h, useSlots } from \"vue\";\nimport { withTrailingSlash } from \"ufo\";\nimport ContentRenderer from \"./ContentRenderer.vue\";\nimport ContentQuery from \"./ContentQuery.vue\";\nimport { useRuntimeConfig, useRoute, useContentHead } from \"#imports\";\nconst ContentDoc = defineComponent({\n  name: \"ContentDoc\",\n  props: {\n    /**\n     * Renderer props\n     */\n    /**\n     * The tag to use for the renderer element if it is used.\n     * @default 'div'\n     */\n    tag: {\n      type: String,\n      required: false,\n      default: \"div\"\n    },\n    /**\n     * Whether or not to render the excerpt.\n     * @default false\n     */\n    excerpt: {\n      type: Boolean,\n      default: false\n    },\n    /**\n     * Query props\n     */\n    /**\n     * The path of the content to load from content source.\n     * @default useRoute().path\n     */\n    path: {\n      type: String,\n      required: false,\n      default: void 0\n    },\n    /**\n     * A query builder params object to be passed to <ContentQuery /> component.\n     */\n    query: {\n      type: Object,\n      required: false,\n      default: void 0\n    },\n    /**\n     * Whether or not to map the document data to the `head` property.\n     */\n    head: {\n      type: Boolean,\n      required: false,\n      default: void 0\n    }\n  },\n  /**\n   * Document empty fallback\n   * @slot empty\n   */\n  /**\n   * Document not found fallback\n   * @slot not-found\n   */\n  render(ctx) {\n    const { contentHead } = useRuntimeConfig().public.content;\n    const slots = useSlots();\n    const { tag, excerpt, path, query, head } = ctx;\n    const shouldInjectContentHead = head === void 0 ? contentHead : head;\n    const contentQueryProps = {\n      ...query || {},\n      path: path || query?.path || withTrailingSlash(useRoute().path),\n      find: \"one\"\n    };\n    const emptyNode = (slot, data) => h(\"pre\", null, JSON.stringify({ message: \"You should use slots with <ContentDoc>\", slot, data }, null, 2));\n    return h(\n      ContentQuery,\n      contentQueryProps,\n      {\n        // Default slot\n        default: slots?.default ? ({ data, refresh, isPartial }) => {\n          if (shouldInjectContentHead) {\n            useContentHead(data);\n          }\n          return slots.default?.({ doc: data, refresh, isPartial, excerpt, ...this.$attrs });\n        } : ({ data }) => {\n          if (shouldInjectContentHead) {\n            useContentHead(data);\n          }\n          return h(\n            ContentRenderer,\n            { value: data, excerpt, tag, ...this.$attrs },\n            // Forward local `empty` slots to ContentRenderer if it is used.\n            { empty: (bindings) => slots?.empty ? slots.empty(bindings) : emptyNode(\"default\", data) }\n          );\n        },\n        // Empty slot\n        empty: (bindings) => slots?.empty?.(bindings) || h(\"p\", null, \"Document is empty, overwrite this content with #empty slot in <ContentDoc>.\"),\n        // Not Found slot\n        \"not-found\": (bindings) => slots?.[\"not-found\"]?.(bindings) || h(\"p\", null, \"Document not found, overwrite this content with #not-found slot in <ContentDoc>.\")\n      }\n    );\n  }\n});\nexport default ContentDoc;\n</script>\n"],"names":["useContentHead","_content","to","useRoute","content","unref","config","useRuntimeConfig","watch","data","path","head","Object","assign","meta","link","title","some","m","property","push","host","public","_url","joinURL","app","baseURL","fullPath","url","trailingSlash","withTrailingSlash","withoutTrailingSlash","rel","href","description","filter","name","length","image","hasProtocol","URL","imageKeys","key","src","isAbsoluteURL","imageURL","useHead","immediate","defineComponent","props","tag","type","String","required","default","excerpt","Boolean","query","render","ctx","contentHead","slots","useSlots","shouldInjectContentHead","contentQueryProps","find","h","ContentQuery","refresh","isPartial","doc","this","$attrs","ContentRenderer","value","empty","bindings","slot","JSON","stringify","message","emptyNode"],"mappings":"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","x_google_ignoreList":[0,1]}