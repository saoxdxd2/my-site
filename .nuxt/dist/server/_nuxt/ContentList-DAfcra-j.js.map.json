{"file":"ContentList-DAfcra-j.js","mappings":"k2CAGA,MAAMA,EAAY,CAACC,EAAMC,IAASC,EAAE,MAAO,KAAMC,KAAKC,UAAU,CAAEC,QAAS,0CAA2CL,OAAMC,QAAQ,KAAM,MACtHK,EAAgB,CAClCC,KAAM,cACNC,MAAO,CAQLC,KAAM,CACJC,KAAMC,OACNC,UAAU,EACVC,aAAS,GAKXC,MAAO,CACLJ,KAAMK,OACNH,UAAU,EACVC,aAAS,IAWb,MAAAG,CAAOC,GACL,MAAMC,EAAQC,KACRV,KAAEA,EAAAK,MAAMA,GAAUG,EAClBG,EAAoB,IACrBN,GAAS,CAAA,EACZL,KAAMA,GAAQK,GAAOL,MAAQ,KAE/B,OAAOP,EACLmB,EACAD,EACA,CAEEP,QAASK,GAAOL,QAAU,EAAGZ,OAAMqB,UAASC,eAAgBL,EAAML,QAAQ,CAAEW,KAAMvB,EAAMqB,UAASC,eAAcE,KAAKC,SAAaC,GAAa5B,EAAU,UAAW4B,EAAS1B,MAE5K2B,MAAQD,GAAaT,GAAOU,MAAQV,EAAMU,MAAMD,GAAY5B,EAAU,UAAW4B,GAAU1B,MAE3F,YAAc0B,GAAaT,IAAQ,aAAeA,IAAQ,eAAeS,GAAY5B,EAAU,YAAa4B,GAAU1B,OAG5H","names":["emptyNode","slot","data","h","JSON","stringify","message","defineComponent","name","props","path","type","String","required","default","query","Object","render","ctx","slots","useSlots","contentQueryProps","ContentQuery","refresh","isPartial","list","this","$attrs","bindings","empty"],"sources":["../../../../node_modules/@nuxt/content/dist/runtime/components/ContentList.vue"],"sourcesContent":["<script>\nimport { defineComponent, h, useSlots } from \"vue\";\nimport ContentQuery from \"./ContentQuery.vue\";\nconst emptyNode = (slot, data) => h(\"pre\", null, JSON.stringify({ message: \"You should use slots with <ContentList>\", slot, data }, null, 2));\nconst ContentList = defineComponent({\n  name: \"ContentList\",\n  props: {\n    /**\n     * Query props\n     */\n    /**\n     * The path of the content to load from content source.\n     * @default '/'\n     */\n    path: {\n      type: String,\n      required: false,\n      default: void 0\n    },\n    /**\n     * A query builder params object to be passed to <ContentQuery /> component.\n     */\n    query: {\n      type: Object,\n      required: false,\n      default: void 0\n    }\n  },\n  /**\n   * Content empty fallback\n   * @slot empty\n   */\n  /**\n   * Content not found fallback\n   * @slot not-found\n   */\n  render(ctx) {\n    const slots = useSlots();\n    const { path, query } = ctx;\n    const contentQueryProps = {\n      ...query || {},\n      path: path || query?.path || \"/\"\n    };\n    return h(\n      ContentQuery,\n      contentQueryProps,\n      {\n        // Default slot\n        default: slots?.default ? ({ data, refresh, isPartial }) => slots.default({ list: data, refresh, isPartial, ...this.$attrs }) : (bindings) => emptyNode(\"default\", bindings.data),\n        // Empty slot\n        empty: (bindings) => slots?.empty ? slots.empty(bindings) : emptyNode(\"default\", bindings?.data),\n        // Not Found slot\n        \"not-found\": (bindings) => slots?.[\"not-found\"] ? slots?.[\"not-found\"]?.(bindings) : emptyNode(\"not-found\", bindings?.data)\n      }\n    );\n  }\n});\nexport default ContentList;\n</script>\n"],"version":3}