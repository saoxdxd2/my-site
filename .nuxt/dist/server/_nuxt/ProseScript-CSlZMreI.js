import{defineComponent as e,unref as r,useSSRContext as o}from"vue";import{ssrRenderAttrs as t}from"vue/server-renderer";const s=e({__name:"ProseScript",__ssrInlineRender:!0,props:{src:{type:String,default:""}},setup:e=>(e,o,s,n)=>{r(false)?o(`<div${t(n)}> Rendering the <code>script</code> element is dangerous and is disabled by default. Consider implementing your own <code>ProseScript</code> element to have control over script rendering. </div>`):o("\x3c!----\x3e")}}),n=s.setup;s.setup=(e,r)=>{const t=o();return(t.modules||(t.modules=new Set)).add("node_modules/@nuxtjs/mdc/dist/runtime/components/prose/ProseScript.vue"),n?n(e,r):void 0};export{s as default};
//# sourceMappingURL=ProseScript-CSlZMreI.js.map
