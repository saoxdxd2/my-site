import{c as e,r as t,e as r}from"../../_/nitro.mjs";import"unified";import"remark-parse";import"remark-rehype";import"remark-mdc";import"remark-gfm";import"rehype-external-links";import"rehype-sort-attribute-values";import"rehype-sort-attributes";import"rehype-raw";import"detab";import"micromark-util-sanitize-uri";import"hast-util-to-string";import"github-slugger";import"node:http";import"node:https";import"node:events";import"node:buffer";import"node:fs";import"node:url";import"node:path";import"node:crypto";const o=e(async e=>{try{const o=await t(e),{name:a,email:i,message:n,subject:m}=o;if(!a||!i||!n)throw r({statusCode:400,statusMessage:"Missing required fields: name, email, and message are required"});if(!/^[^\s@]+@[^\s@]+\.[^\s@]+$/.test(i))throw r({statusCode:400,statusMessage:"Invalid email format"});const u=getClientIP(e)||"unknown",p=await async function(e){const t=Date.now(),r=9e5,o=5,a=s.get(e);if(!a||t>a.resetTime)return s.set(e,{count:1,resetTime:t+r}),{allowed:!0,remaining:o-1};if(a.count>=o)return{allowed:!1,remaining:0};return a.count++,{allowed:!0,remaining:o-a.count}}(u);if(!p.allowed)throw r({statusCode:429,statusMessage:"Too many requests. Please try again later."});return console.log("Contact form submission:",{name:a,email:i,subject:m||"Contact Form Submission",message:n,timestamp:(new Date).toISOString(),ip:u}),{success:!0,message:"Thank you for your message. We will get back to you soon!"}}catch(e){if(console.error("Contact form error:",e),e.statusCode)throw e;throw r({statusCode:500,statusMessage:"Internal server error. Please try again later."})}}),s=new Map;setInterval(()=>{const e=Date.now();for(const[t,r]of s.entries())e>r.resetTime&&s.delete(t)},3e5);export{o as default};
//# sourceMappingURL=contact.post.mjs.map
