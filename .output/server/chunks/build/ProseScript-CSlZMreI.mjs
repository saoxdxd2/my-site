import{defineComponent as e,unref as r,useSSRContext as o}from"vue";import{ssrRenderAttrs as t}from"vue/server-renderer";const n=e({__name:"ProseScript",__ssrInlineRender:!0,props:{src:{type:String,default:""}},setup:e=>(e,o,n,s)=>{r(!1)?o(`<div${t(s)}> Rendering the <code>script</code> element is dangerous and is disabled by default. Consider implementing your own <code>ProseScript</code> element to have control over script rendering. </div>`):o("\x3c!----\x3e")}}),s=n.setup;n.setup=(e,r)=>{const t=o();return(t.modules||(t.modules=new Set)).add("node_modules/@nuxtjs/mdc/dist/runtime/components/prose/ProseScript.vue"),s?s(e,r):void 0};export{n as default};
//# sourceMappingURL=ProseScript-CSlZMreI.mjs.map
